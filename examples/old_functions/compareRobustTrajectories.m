function fig = compareRobustTrajectories(nominal, ermTraj)
% compareRobustTrajectories: Compares the trajectories generated by an ERM
% model to the nominal trajectory (generated using NC constraints) and
% plots the difference against the value of the uncertainty.

%   Luke Drnach
%   February 19, 2020

% Get the nominal data
t = nominal.xtraj.getBreaks();
xN = nominal.xtraj.eval(t);
uN = nominal.utraj.eval(t);
lN = nominal.ltraj.eval(t);

% Assume 2D, so we can construct the number of contact points
numL = size(lN, 1);
numContact = numL/4;
S = zeros(2*numContact,numL);        % Select the forces from the contact variables

S(1:numContact:end, 1:4:end) = eye(numContact);
S(2:numContact:end, 2:4:end) = eye(numContact);
S(2:numContact:end, 3:4:end) = -eye(numContact);
% nominal force trajectories
fN = S*lN;

% Initialize arrays
nTraj = length(ermTraj);
sigma = zeros(1,nTraj);
stateErr = zeros(1,nTraj);
ctrlErr = zeros(1,nTraj);
forceErr = zeros(1,nTraj);
% Loop over all the data
for n = 1:nTraj
    % Get the trajectories from the current run
    x = ermTraj(n).xtraj.eval(t);     % States
    u = ermTraj(n).utraj.eval(t);     % Controls
    f = S*ermTraj(n).ltraj.eval(t);   % Contact forces
    sigma(n) = ermTraj(n).sigma;
    % calculate the errors
    xerr = sum((x - xN).^2, 1);
    uerr = sum((u - uN).^2, 1);
    ferr = sum((f - fN).^2, 1);
    % Total mean-squared error
    stateErr(n) = mean(xerr);
    ctrlErr(n) = mean(uerr);
    forceErr(n) = mean(ferr);
end

% Check for info fields
if isfield(ermTraj,'info')
    status = [ermTraj(:).info];
else
    status = ones(1,ntraj);
end


% Make the final plots
fig = figure();
subplot(3,1,1);
loglog(sigma, stateErr,'ko-','MarkerFaceColor','k','LineWidth',1.5);
ylabel('State');
title('Deviation of ERM Trajectories from Nominal');
if any(status > 1)
   hold on;
   loglog(sigma(status > 1), stateErr(status > 1), 'ro');
end


subplot(3,1,2);
loglog(sigma, ctrlErr,'ko-','MarkerFaceColor','k','LineWidth',1.5);
ylabel('Control');
if any(status > 1)
   hold on;
   loglog(sigma(status > 1), ctrlErr(status > 1), 'ro');
end


subplot(3,1,3);
loglog(sigma, forceErr,'ko-','MarkerFaceColor','k','LineWidth',1.5);
ylabel('Force')
xlabel(sprintf('Uncertainty (\\sigma)'));
if any(status > 1)
   hold on;
   loglog(sigma(status > 1), forceErr(status > 1), 'ro');
end


end

